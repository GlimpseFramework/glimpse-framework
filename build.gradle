buildscript {
	ext.kotlin_version = '1.0.4'
	ext.kotlintest_version = '1.3.4'
	ext.mockito_kotlin_version = '0.6.2'
	ext.dokka_version = '0.9.9'
	ext.jogl_version = '2.3.2'
	ext.launch4j_version = '1.6.2'

	repositories {
		jcenter()
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
		classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
		classpath "gradle.plugin.edu.sc.seis.gradle:launch4j:${launch4j_version}"
	}
}

allprojects  {
	apply plugin: 'maven'

	group = 'org.glimpseframework'
	version = '0.4'
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'kotlin'
	apply plugin: 'org.jetbrains.dokka'
	apply plugin: 'jacoco'

	sourceCompatibility = 1.6
	targetCompatibility = 1.6

	repositories {
		jcenter()
	}

	test {
		testLogging {
			events "passed", "skipped", "failed"
			showExceptions true
			exceptionFormat "full"
			showCauses true
			showStackTraces true

			afterSuite { desc, result ->
				def output = "results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
				def repeatLength = output.length()
				println('\n' + ('-' * repeatLength) + '\n' + desc.name + '\n' + output + '\n' + ('-' * repeatLength))
			}
		}
	}

	jacocoTestReport {
		reports {
			xml.enabled = true
			html.enabled = true
		}
	}

	check.dependsOn jacocoTestReport
}
